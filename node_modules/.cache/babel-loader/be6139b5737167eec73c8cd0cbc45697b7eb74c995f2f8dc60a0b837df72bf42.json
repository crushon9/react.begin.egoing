{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react-app\\\\src\\\\components\\\\UpdateContent.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UpdateContent extends Component {\n  constructor(props) {\n    /* props 데이터를 input에 바로 쓰면 리액트가 readonly 처리하기때문에 state로 받아서 값을 변경 */\n    super(props);\n    this.state = {\n      id: this.props.data.id,\n      title: this.props.data.title,\n      desc: this.props.data.desc\n    };\n    this.inputFormHandler = this.inputFormHandler.bind(this); /* 반복되는 bind(this) 리팩토링 */\n  }\n\n  inputFormHandler(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    /* e.target:form에서 담은 데이터 */\n    /* [e.target.name] : 이벤트가 일어난 태그의 name */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/update_proc\",\n        method: \"post\",\n        onSubmit: function (e) {\n          e.preventDefault();\n          this.props.onSubmit(this.state.id, this.state.title, this.state.desc);\n          /* onChange 이벤트로 state와 e.target이 동기화가 되니까 state로 넣어줘도 됨*/\n        }.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: this.state.title,\n            onChange: this.inputFormHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"desc\",\n            value: this.state.desc,\n            onChange: this.inputFormHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default UpdateContent;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","UpdateContent","constructor","props","state","id","data","title","desc","inputFormHandler","bind","e","setState","target","name","value","render","children","fileName","_jsxFileName","lineNumber","columnNumber","action","method","onSubmit","preventDefault","type","onChange"],"sources":["C:/workspace/react-app/src/components/UpdateContent.js"],"sourcesContent":["import {Component} from \"react\";\r\n\r\nclass UpdateContent extends Component {\r\n    constructor(props) {\r\n        /* props 데이터를 input에 바로 쓰면 리액트가 readonly 처리하기때문에 state로 받아서 값을 변경 */\r\n        super(props);\r\n        this.state = {\r\n            id:this.props.data.id,\r\n            title:this.props.data.title,\r\n            desc:this.props.data.desc\r\n        }\r\n        this.inputFormHandler = this.inputFormHandler.bind(this); /* 반복되는 bind(this) 리팩토링 */\r\n    }\r\n    inputFormHandler(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n        /* e.target:form에서 담은 데이터 */\r\n        /* [e.target.name] : 이벤트가 일어난 태그의 name */\r\n    }\r\n    render() {\r\n        return (\r\n            <article>\r\n                <h2>Update</h2>\r\n                <form action=\"/update_proc\" method=\"post\"\r\n                      onSubmit={function (e) {\r\n                        e.preventDefault();\r\n                        this.props.onSubmit(this.state.id, this.state.title, this.state.desc);\r\n                        /* onChange 이벤트로 state와 e.target이 동기화가 되니까 state로 넣어줘도 됨*/\r\n                }.bind(this)}>\r\n               {/** <p><input type=\"text\" name=\"title\" value={data.title}/></p>\r\n                    <p><textarea name=\"desc\" value={data.desc}/></p>\r\n                    Warning: You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field.\r\n                    위와 같이 props 데이터를 그냥 input에 쓰면 readonly 처리됨 */}\r\n                    <p><input type=\"text\" name=\"title\"\r\n                              value={this.state.title}\r\n                              onChange={this.inputFormHandler}\r\n                    /></p>\r\n                    <p><textarea name=\"desc\"\r\n                                 value={this.state.desc}\r\n                                 onChange={this.inputFormHandler}\r\n                    /></p>\r\n                    <p><input type=\"submit\"/></p>\r\n                </form>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateContent;"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,SAASH,SAAS,CAAC;EAClCI,WAAWA,CAACC,KAAK,EAAE;IACf;IACA,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,EAAE,EAAC,IAAI,CAACF,KAAK,CAACG,IAAI,CAACD,EAAE;MACrBE,KAAK,EAAC,IAAI,CAACJ,KAAK,CAACG,IAAI,CAACC,KAAK;MAC3BC,IAAI,EAAC,IAAI,CAACL,KAAK,CAACG,IAAI,CAACE;IACzB,CAAC;IACD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D;;EACAD,gBAAgBA,CAACE,CAAC,EAAE;IAChB,IAAI,CAACC,QAAQ,CAAC;MAAC,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAAK,CAAC,CAAC;IAChD;IACA;EACJ;;EACAC,MAAMA,CAAA,EAAG;IACL,oBACIhB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAAiB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfrB,OAAA;QAAMsB,MAAM,EAAC,cAAc;QAACC,MAAM,EAAC,MAAM;QACnCC,QAAQ,EAAE,UAAUb,CAAC,EAAE;UACrBA,CAAC,CAACc,cAAc,CAAC,CAAC;UAClB,IAAI,CAACtB,KAAK,CAACqB,QAAQ,CAAC,IAAI,CAACpB,KAAK,CAACC,EAAE,EAAE,IAAI,CAACD,KAAK,CAACG,KAAK,EAAE,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC;UACrE;QACR,CAAC,CAACE,IAAI,CAAC,IAAI,CAAE;QAAAO,QAAA,gBAKTjB,OAAA;UAAAiB,QAAA,eAAGjB,OAAA;YAAO0B,IAAI,EAAC,MAAM;YAACZ,IAAI,EAAC,OAAO;YACxBC,KAAK,EAAE,IAAI,CAACX,KAAK,CAACG,KAAM;YACxBoB,QAAQ,EAAE,IAAI,CAAClB;UAAiB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACNrB,OAAA;UAAAiB,QAAA,eAAGjB,OAAA;YAAUc,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE,IAAI,CAACX,KAAK,CAACI,IAAK;YACvBmB,QAAQ,EAAE,IAAI,CAAClB;UAAiB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACNrB,OAAA;UAAAiB,QAAA,eAAGjB,OAAA;YAAO0B,IAAI,EAAC;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAElB;AACJ;AAEA,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}