{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react-app\\\\src\\\\App.js\";\nimport { Component } from \"react\"; // react 라는 라이브러리에서 Component라는 클래스를 로딩\nimport ToC from \"./components/ToC\"; // ToC 라는 태그를 root폴더(src) 하위의 components 하위의 ToC.js 파일에서 가져온다\nimport Subject from \"./components/Subject\";\nimport Control from \"./components/Control\";\nimport ReadContent from \"./components/ReadContent\";\nimport CreateContent from \"./components/CreateContent\";\nimport './App.css';\n\n// jsx : JavaScript를 확장한 문법 (html 태그를 따옴표로 표현하지 않아도 됨)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App_class_nm extends Component {\n  constructor(props) {\n    // 컴포넌트를 render 하기 전에 실행되는 생성자\n    super(props); // 모든 state 초기화\n    this.state = {\n      // state 값 설정\n      subject: {\n        title: 'React',\n        sub: '페이스북에서 개발한 자바스크립트 라이브러리'\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'intro',\n        desc: 'react 특징 컴포넌트 기반',\n        li: ['가독성', '재사용성', '유지보수']\n      }, {\n        id: 2,\n        title: 'install',\n        desc: 'npm/npx 을 이용하여 create-react-app 설치',\n        li: ['npm - nodejs 프로그램 (영구설치)', 'npx - 임시로 설치해서 삭제하고 사용할때마다 다시 다운하여 늘 최신상태 유지']\n      }, {\n        id: 3,\n        title: 'coding & run',\n        desc: '수정한 코드는 실시간 반영',\n        li: ['init : cmd에서 create-react-app 실행하면 실행위치 폴더에 자동 세팅', 'coding : src폴더의 하위파일 코드편집', 'run : npm run start']\n      }, {\n        id: 4,\n        title: 'deploy',\n        desc: '원본을 그대로 배포하면 파일용량이 크고 보안문제가 있음',\n        li: ['​npm run build 명령 : build 폴더 안에 용량이 줄어든 코드파일 자동생성', 'npm install -g serve : 서브설치 (npm을 통해 설치가능한 간단한 웹서버)', 'serve -s build : 서브를 실행시킬때 build 디렉토리를 루트로 하겠다']\n      }],\n      mode: 'welcome',\n      // default 값\n      selected_cnt_id: 1 // default 값\n    };\n  }\n  /** [props & state]\n   * props 컴포넌트에 설정값을 태그호출시 외부에서 props={ } 형태로 주입, read-only 내부에서 수정불가\n   * state 컴포넌트에 설정값을 내부 코드에서 조작, constructor()로 미리 값을 세팅하거나, setState를 통해 동적으로 값 변경\n   * 상위(부모) 컴포넌트가 하위(자식) 컴포넌트를 제어할 때 상위state값을 하위props로 주입하여 제어\n   * 하위(자식) 컴포넌트가 상위(부모) 컴포넌트를 제어할 때 부모가 함수로 setState 선언 자식은 이벤트를통해얻은 인자를 props로 선언된 부모함수의 파라미터로 전달 */\n  render() {\n    /** render() (class 안에 소속된 함수는 function을 생략해서 표현)\n     * 리액트에서는 props, state가 바뀌면 해당되는 컴포넌트의 render함수가 호출되며 화면이 다시 그려진다 */\n    console.log('**App render**');\n    var _title,\n      _desc,\n      _li,\n      _article = null;\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _li = '';\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc,\n        li: _li\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this);\n    } else if (this.state.mode === 'read') {\n      for (var i = 0; i < this.state.contents.length; i++) {\n        var content = this.state.contents[i];\n        if (content.id === this.state.selected_cnt_id) {\n          _title = content.title;\n          _desc = content.desc;\n          _li = content.li;\n          break;\n        }\n      }\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc,\n        li: _li\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this);\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 24\n      }, this);\n    }\n    return (\n      /*#__PURE__*/\n      // return 안에는 하나의 최상위 html 태그를 정의해야한다\n      _jsxDEV(\"div\", {\n        className: \"App_css\",\n        children: [/*#__PURE__*/_jsxDEV(Subject, {\n          title: this.state.subject.title // 하위(자식) 컴포넌트의 props에 상위(부모) 컴포넌트의 state값을 주입\n          ,\n          sub: this.state.subject.sub,\n          onChangePage: function () {\n            // props로 함수를 정의할수도 있음\n            this.setState({\n              // 컴포넌트가 그려진 후 동적으로 state 값을 변경할때는 setState를 쓴다.\n              mode: 'welcome' // state값이 변하므로 render()가 호출됨\n            });\n          }.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ToC, {\n          data: this.state.contents,\n          onChangePage: function (id) {\n            this.setState({\n              mode: 'read',\n              selected_cnt_id: Number(id)\n            });\n          }.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Control, {\n          onChangeMode: function (mode) {\n            this.setState({\n              mode: mode\n            });\n          }.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), _article, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    );\n  }\n}\nexport default App_class_nm;","map":{"version":3,"names":["Component","ToC","Subject","Control","ReadContent","CreateContent","jsxDEV","_jsxDEV","App_class_nm","constructor","props","state","subject","title","sub","welcome","desc","contents","id","li","mode","selected_cnt_id","render","console","log","_title","_desc","_li","_article","fileName","_jsxFileName","lineNumber","columnNumber","i","length","content","className","children","onChangePage","setState","bind","data","Number","onChangeMode"],"sources":["C:/workspace/react-app/src/App.js"],"sourcesContent":["import {Component} from \"react\"; // react 라는 라이브러리에서 Component라는 클래스를 로딩\nimport ToC from \"./components/ToC\" // ToC 라는 태그를 root폴더(src) 하위의 components 하위의 ToC.js 파일에서 가져온다\nimport Subject from \"./components/Subject\"\nimport Control from \"./components/Control\"\nimport ReadContent from \"./components/ReadContent\"\nimport CreateContent from \"./components/CreateContent\";\nimport './App.css';\n\n// jsx : JavaScript를 확장한 문법 (html 태그를 따옴표로 표현하지 않아도 됨)\nclass App_class_nm extends Component {\n    constructor(props){ // 컴포넌트를 render 하기 전에 실행되는 생성자\n        super(props); // 모든 state 초기화\n        this.state = { // state 값 설정\n            subject:{title:'React', sub:'페이스북에서 개발한 자바스크립트 라이브러리'},\n            welcome:{title:'Welcome', desc:'Hello, React!!'},\n            contents:[{id:1,title:'intro' ,desc: 'react 특징 컴포넌트 기반',\n                        li:['가독성', '재사용성', '유지보수']},\n                    {id:2,title:'install' ,desc:'npm/npx 을 이용하여 create-react-app 설치',\n                        li:['npm - nodejs 프로그램 (영구설치)', 'npx - 임시로 설치해서 삭제하고 사용할때마다 다시 다운하여 늘 최신상태 유지']},\n                    {id:3,title:'coding & run' ,desc:'수정한 코드는 실시간 반영',\n                        li:['init : cmd에서 create-react-app 실행하면 실행위치 폴더에 자동 세팅','coding : src폴더의 하위파일 코드편집','run : npm run start']},\n                    {id:4,title:'deploy' ,desc:'원본을 그대로 배포하면 파일용량이 크고 보안문제가 있음',\n                        li:['​npm run build 명령 : build 폴더 안에 용량이 줄어든 코드파일 자동생성','npm install -g serve : 서브설치 (npm을 통해 설치가능한 간단한 웹서버)','serve -s build : 서브를 실행시킬때 build 디렉토리를 루트로 하겠다']},\n            ],\n            mode:'welcome', // default 값\n            selected_cnt_id:1, // default 값\n        }\n    }\n    /** [props & state]\n     * props 컴포넌트에 설정값을 태그호출시 외부에서 props={ } 형태로 주입, read-only 내부에서 수정불가\n     * state 컴포넌트에 설정값을 내부 코드에서 조작, constructor()로 미리 값을 세팅하거나, setState를 통해 동적으로 값 변경\n     * 상위(부모) 컴포넌트가 하위(자식) 컴포넌트를 제어할 때 상위state값을 하위props로 주입하여 제어\n     * 하위(자식) 컴포넌트가 상위(부모) 컴포넌트를 제어할 때 부모가 함수로 setState 선언 자식은 이벤트를통해얻은 인자를 props로 선언된 부모함수의 파라미터로 전달 */\n    render() {\n        /** render() (class 안에 소속된 함수는 function을 생략해서 표현)\n         * 리액트에서는 props, state가 바뀌면 해당되는 컴포넌트의 render함수가 호출되며 화면이 다시 그려진다 */\n        console.log('**App render**');\n        var _title, _desc, _li, _article = null;\n        if (this.state.mode === 'welcome') {\n            _title = this.state.welcome.title;\n            _desc = this.state.welcome.desc;\n            _li = '';\n            _article = <ReadContent title={_title} desc={_desc} li={_li}></ReadContent>\n        } else if (this.state.mode === 'read') {\n            for(var i = 0; i < this.state.contents.length; i++){\n                var content = this.state.contents[i];\n                if (content.id === this.state.selected_cnt_id) {\n                    _title = content.title;\n                    _desc = content.desc;\n                    _li = content.li;\n                    break;\n                }\n            }\n            _article = <ReadContent title={_title} desc={_desc} li={_li}></ReadContent>\n        } else if (this.state.mode === 'create') {\n            _article = <CreateContent></CreateContent>\n        }\n        return ( // return 안에는 하나의 최상위 html 태그를 정의해야한다\n            <div className=\"App_css\">\n               {/** <Subject title=\"React\" sub=\"페이스북에서 개발한 자바스크립트 라이브러리\"></Subject> props 값을 하드코딩할수도 있음 */}\n                <Subject\n                    title={this.state.subject.title} // 하위(자식) 컴포넌트의 props에 상위(부모) 컴포넌트의 state값을 주입\n                    sub={this.state.subject.sub}\n                    onChangePage={function () { // props로 함수를 정의할수도 있음\n                        this.setState({ // 컴포넌트가 그려진 후 동적으로 state 값을 변경할때는 setState를 쓴다.\n                            mode:'welcome' // state값이 변하므로 render()가 호출됨\n                        });\n                    }.bind(this)}\n                >\n                </Subject>\n                <ToC\n                    data={this.state.contents}\n                    onChangePage={function (id) {\n                        this.setState({\n                            mode:'read',\n                            selected_cnt_id:Number(id),\n                        });\n                    }.bind(this)}\n                >\n                </ToC>\n                <Control\n                    onChangeMode={function (mode) {\n                        this.setState({\n                            mode:mode\n                        });\n                    }.bind(this)}\n                >\n                </Control>\n                {_article} {/* 컴포넌트를 변수로 제어해서 뿌리기*/}\n            </div>\n        );\n    }\n}\n\nexport default App_class_nm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}